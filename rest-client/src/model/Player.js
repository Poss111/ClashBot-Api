/**
 * clash-bot-webapp-service
 * Clash Bot Webapp Service to support League of Legends Clash tournament scheduling with Discord.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: rixxroid@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Role from './Role';
import Subscription from './Subscription';

/**
 * The Player model module.
 * @module model/Player
 * @version 1.0.0
 */
class Player {
    /**
     * Constructs a new <code>Player</code>.
     * A Clash Bot Player
     * @alias module:model/Player
     */
    constructor() { 
        
        Player.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Player</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Player} obj Optional instance to populate.
     * @return {module:model/Player} The populated <code>Player</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Player();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = Role.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('champions')) {
                obj['champions'] = ApiClient.convertToType(data['champions'], ['String']);
            }
            if (data.hasOwnProperty('subscriptions')) {
                obj['subscriptions'] = ApiClient.convertToType(data['subscriptions'], [Subscription]);
            }
            if (data.hasOwnProperty('serverName')) {
                obj['serverName'] = ApiClient.convertToType(data['serverName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Unique identifier for Player
 * @member {String} id
 */
Player.prototype['id'] = undefined;

/**
 * The Players discord name
 * @member {String} name
 */
Player.prototype['name'] = undefined;

/**
 * @member {module:model/Role} role
 */
Player.prototype['role'] = undefined;

/**
 * A list of the Users preferred champions.
 * @member {Array.<String>} champions
 */
Player.prototype['champions'] = undefined;

/**
 * @member {Array.<module:model/Subscription>} subscriptions
 */
Player.prototype['subscriptions'] = undefined;

/**
 * @member {String} serverName
 */
Player.prototype['serverName'] = undefined;






export default Player;

