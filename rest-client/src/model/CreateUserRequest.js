/**
 * clash-bot-webapp-service
 * Clash Bot Webapp Service to support League of Legends Clash tournament scheduling with Discord.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: rixxroid@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateUserRequest model module.
 * @module model/CreateUserRequest
 * @version 1.0.0
 */
class CreateUserRequest {
    /**
     * Constructs a new <code>CreateUserRequest</code>.
     * @alias module:model/CreateUserRequest
     * @param id {String} The id of the player
     * @param name {String} The name of the player
     * @param serverName {String} The server the player is from.
     */
    constructor(id, name, serverName) { 
        
        CreateUserRequest.initialize(this, id, name, serverName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, serverName) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['serverName'] = serverName;
    }

    /**
     * Constructs a <code>CreateUserRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUserRequest} obj Optional instance to populate.
     * @return {module:model/CreateUserRequest} The populated <code>CreateUserRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateUserRequest();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serverName')) {
                obj['serverName'] = ApiClient.convertToType(data['serverName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The id of the player
 * @member {String} id
 */
CreateUserRequest.prototype['id'] = undefined;

/**
 * The name of the player
 * @member {String} name
 */
CreateUserRequest.prototype['name'] = undefined;

/**
 * The server the player is from.
 * @member {String} serverName
 */
CreateUserRequest.prototype['serverName'] = undefined;






export default CreateUserRequest;

