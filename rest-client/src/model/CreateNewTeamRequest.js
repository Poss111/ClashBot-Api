/**
 * clash-bot-webapp-service
 * Clash Bot Webapp Service to support League of Legends Clash tournament scheduling with Discord.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: rixxroid@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateNewTeamRequestPlayerDetails from './CreateNewTeamRequestPlayerDetails';

/**
 * The CreateNewTeamRequest model module.
 * @module model/CreateNewTeamRequest
 * @version 1.0.0
 */
class CreateNewTeamRequest {
    /**
     * Constructs a new <code>CreateNewTeamRequest</code>.
     * @alias module:model/CreateNewTeamRequest
     * @param serverName {String} The dedicated for the server team
     * @param tournamentName {String} The League of Legends Clash Tournament to sign up for
     * @param tournamentDay {String} The Tournament day to sign up for
     * @param playerDetails {module:model/CreateNewTeamRequestPlayerDetails} 
     */
    constructor(serverName, tournamentName, tournamentDay, playerDetails) { 
        
        CreateNewTeamRequest.initialize(this, serverName, tournamentName, tournamentDay, playerDetails);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, serverName, tournamentName, tournamentDay, playerDetails) { 
        obj['serverName'] = serverName;
        obj['tournamentName'] = tournamentName;
        obj['tournamentDay'] = tournamentDay;
        obj['playerDetails'] = playerDetails;
    }

    /**
     * Constructs a <code>CreateNewTeamRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateNewTeamRequest} obj Optional instance to populate.
     * @return {module:model/CreateNewTeamRequest} The populated <code>CreateNewTeamRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateNewTeamRequest();

            if (data.hasOwnProperty('serverName')) {
                obj['serverName'] = ApiClient.convertToType(data['serverName'], 'String');
            }
            if (data.hasOwnProperty('tournamentName')) {
                obj['tournamentName'] = ApiClient.convertToType(data['tournamentName'], 'String');
            }
            if (data.hasOwnProperty('tournamentDay')) {
                obj['tournamentDay'] = ApiClient.convertToType(data['tournamentDay'], 'String');
            }
            if (data.hasOwnProperty('playerDetails')) {
                obj['playerDetails'] = CreateNewTeamRequestPlayerDetails.constructFromObject(data['playerDetails']);
            }
        }
        return obj;
    }


}

/**
 * The dedicated for the server team
 * @member {String} serverName
 */
CreateNewTeamRequest.prototype['serverName'] = undefined;

/**
 * The League of Legends Clash Tournament to sign up for
 * @member {String} tournamentName
 */
CreateNewTeamRequest.prototype['tournamentName'] = undefined;

/**
 * The Tournament day to sign up for
 * @member {String} tournamentDay
 */
CreateNewTeamRequest.prototype['tournamentDay'] = undefined;

/**
 * @member {module:model/CreateNewTeamRequestPlayerDetails} playerDetails
 */
CreateNewTeamRequest.prototype['playerDetails'] = undefined;






export default CreateNewTeamRequest;

