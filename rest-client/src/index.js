/**
 * clash-bot-webapp-service
 * Clash Bot Webapp Service to support League of Legends Clash tournament scheduling with Discord.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: rixxroid@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AddToListOfPreferredChampionsRequest from './model/AddToListOfPreferredChampionsRequest';
import CreateNewListOfPreferredChampionsRequest from './model/CreateNewListOfPreferredChampionsRequest';
import CreateNewTeamRequest from './model/CreateNewTeamRequest';
import CreateNewTeamRequestPlayerDetails from './model/CreateNewTeamRequestPlayerDetails';
import CreateUserRequest from './model/CreateUserRequest';
import Error from './model/Error';
import GetApplicationHealth200Response from './model/GetApplicationHealth200Response';
import PlacePlayerOnTentativeRequest from './model/PlacePlayerOnTentativeRequest';
import Player from './model/Player';
import Role from './model/Role';
import Subscription from './model/Subscription';
import Team from './model/Team';
import TeamPlayerDetails from './model/TeamPlayerDetails';
import Tentative from './model/Tentative';
import Tournament from './model/Tournament';
import UpdateTeamRequest from './model/UpdateTeamRequest';
import SREApi from './api/SREApi';
import TeamApi from './api/TeamApi';
import TentativeApi from './api/TentativeApi';
import TournamentApi from './api/TournamentApi';
import UserApi from './api/UserApi';


/**
* Clash_Bot_Webapp_Service_to_support_League_of_Legends_Clash_tournament_scheduling_with_Discord_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ClashBotRestClient = require('index'); // See note below*.
* var xxxSvc = new ClashBotRestClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ClashBotRestClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ClashBotRestClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ClashBotRestClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AddToListOfPreferredChampionsRequest model constructor.
     * @property {module:model/AddToListOfPreferredChampionsRequest}
     */
    AddToListOfPreferredChampionsRequest,

    /**
     * The CreateNewListOfPreferredChampionsRequest model constructor.
     * @property {module:model/CreateNewListOfPreferredChampionsRequest}
     */
    CreateNewListOfPreferredChampionsRequest,

    /**
     * The CreateNewTeamRequest model constructor.
     * @property {module:model/CreateNewTeamRequest}
     */
    CreateNewTeamRequest,

    /**
     * The CreateNewTeamRequestPlayerDetails model constructor.
     * @property {module:model/CreateNewTeamRequestPlayerDetails}
     */
    CreateNewTeamRequestPlayerDetails,

    /**
     * The CreateUserRequest model constructor.
     * @property {module:model/CreateUserRequest}
     */
    CreateUserRequest,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The GetApplicationHealth200Response model constructor.
     * @property {module:model/GetApplicationHealth200Response}
     */
    GetApplicationHealth200Response,

    /**
     * The PlacePlayerOnTentativeRequest model constructor.
     * @property {module:model/PlacePlayerOnTentativeRequest}
     */
    PlacePlayerOnTentativeRequest,

    /**
     * The Player model constructor.
     * @property {module:model/Player}
     */
    Player,

    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamPlayerDetails model constructor.
     * @property {module:model/TeamPlayerDetails}
     */
    TeamPlayerDetails,

    /**
     * The Tentative model constructor.
     * @property {module:model/Tentative}
     */
    Tentative,

    /**
     * The Tournament model constructor.
     * @property {module:model/Tournament}
     */
    Tournament,

    /**
     * The UpdateTeamRequest model constructor.
     * @property {module:model/UpdateTeamRequest}
     */
    UpdateTeamRequest,

    /**
    * The SREApi service constructor.
    * @property {module:api/SREApi}
    */
    SREApi,

    /**
    * The TeamApi service constructor.
    * @property {module:api/TeamApi}
    */
    TeamApi,

    /**
    * The TentativeApi service constructor.
    * @property {module:api/TentativeApi}
    */
    TentativeApi,

    /**
    * The TournamentApi service constructor.
    * @property {module:api/TournamentApi}
    */
    TournamentApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
